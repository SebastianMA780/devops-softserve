pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                script {
                    checkout scm
                    echo "Repository checked out."
                }
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    dir('app') { // Adjust 'app' if your Python code is in a different subdirectory or at the repository root
                        echo "Setting up Python virtual environment..."
                        sh 'python -m venv venv'

                        def venvPythonExecutable = "./venv/Scripts/python"

                        echo "Installing basic Python packages (pip, pytest) into the virtual environment..."
                        sh """
                            "${venvPythonExecutable}" -m pip install --upgrade pip
                            "${venvPythonExecutable}" -m pip install pytest
                        """

                        echo "Installing dependencies from requirements.txt if present..."
                        sh """
                            if [ -f requirements.txt ]; then
                                "${venvPythonExecutable}" -m pip install -r requirements.txt
                                echo "Dependencies installed from requirements.txt"
                            else
                                echo "No requirements.txt found. Skipping dependency installation."
                            fi
                        """
                        echo "Python environment setup complete."
                    }
                }
            }
        }

        stage('Run Python Tests') {
            steps {
                script {
                    dir('.') { // Ensures we are at the workspace root for test discovery
                        echo "Verifying test files exist in 'Tests/' directory..."
                        // List contents of the 'Tests' directory to confirm file presence and casing
                        sh 'ls -lR Tests/'

                        echo "Running Python tests with pytest..."
                        def venvPythonExecutableAtRoot = "./app/venv/Scripts/python"

                        // Explicitly tell pytest to look in the 'Tests' directory.
                        // '--ignore=venv' is added as a safeguard, though 'app/venv' should not be an issue for discovery from root.
                        sh """
                            "${venvPythonExecutableAtRoot}" -m pytest --verbose Tests/ --ignore=app/venv/
                        """
                        echo "Python tests completed."
                    }
                }
            }
        }

        // Optional: Add a stage for linting/code quality checks
        // stage('Code Quality Check') {
        //     steps {
        //         script {
        //             dir('.') {
        //                 echo "Running Flake8 for code quality..."
        //                 def venvPythonExecutableAtRoot = "./app/venv/Scripts/python"
        //                 sh """
        //                     "${venvPythonExecutableAtRoot}" -m pip install flake8
        //                     "${venvPythonExecutableAtRoot}" -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        //                     "${venvPythonExecutableAtRoot}" -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
        //                 """
        //                 echo "Code quality check completed."
        //             }
        //         }
        //     }
        // }
    }

    post {
        always {
            script {
                dir('app') {
                    echo "Cleaning up Python virtual environment..."
                    sh 'rm -rf venv'
                    echo "Virtual environment removed."
                }
            }
            echo 'Python testing pipeline finished.'
        }
        success {
            echo '✅ Python application tests passed successfully!'
        }
        failure {
            echo '❌ Python application tests failed. Check logs above.'
        }
    }
}